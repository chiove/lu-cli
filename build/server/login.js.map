{"version":3,"sources":["webpack:///./src/utils/get-initial-props.js","webpack:///./src/pages/login/images/logo.png","webpack:///./src/pages/login/index.js"],"names":["_this","_isPop","_isMount","popStateCallback","SourceComponent","initialData","canClientFetch","this","match","location","res","window","props","history","action","staticContext","React","getInitialProps","onFinish","axios","message","className","src","alt","name","rules","required","size","prefix","autoComplete","placeholder","type","htmlType","href"],"mappings":"g7DAIA,IAAIA,EAAJ,KACIC,GAAJ,EACIC,GAAJ,EACMC,EAAmB,WACnBH,GAASA,EAAb,kBACEC,KACA,GACED,sBAKS,aAAAI,GAAe,oB,kOAAA,U,MAAA,aAC5B,cAAmB,a,4FAAA,UACjB,kBAEA,MAAa,CACXC,YADW,GAEXC,gBAAgB,GALD,EADS,O,EAAA,E,EAAA,0KAmBAC,KAnBA,MAmBnBC,EAnBmB,QAmBZC,EAnBY,YAoBdL,EApBc,gDAoB0BA,EAAA,gBAAgC,CAACI,MAAD,EAAQC,aApBlE,wDAoBpBC,EApBoB,KAqB1BH,KAAA,SAAc,CACZF,YADY,EAEZC,gBAAgB,IAvBQ,2PAmC1BJ,GAnC0B,EAoCtBS,OAAJ,iBACEX,EADyB,KAGzBW,sCACA,GACEJ,KAAA,qBAImBA,KAAKK,MAAMC,SA7CR,SA6CmBN,KAAKK,MAAMC,QAAQC,SACzCH,OA9CG,+CA+ClBJ,KA/CkB,4JAoD1BN,GADqB,EAErBC,GAFqB,IAnDK,+BAyD1B,IAAMU,E,+VAAQ,CAAH,CACTP,YAAa,IACVE,KAFL,OAmBA,OAXMA,KAAKK,MAAT,gBAA8BA,cAAoBL,KAAKK,MAAMG,cAAcV,aAA7CO,IAWzB,oBAAP,M,EA5E0B,oKAYdR,EAZc,gDAY0BA,kBAZ1B,kEAYpBM,EAZoB,oH,8BAAA,GAA8BM,IAA9B,a,gCChBf,QAA0B,2D,oOCwF1BC,uBAhFS,WACtB,IAAMC,EAAQ,e,EAAA,G,EAAA,yBAAG,oHACIC,sBADJ,UAEf,OADMT,EADS,aAEXA,KACFU,kBAAgBV,EAAhBU,SAEAA,gBAAcV,EAAdU,SALa,0C,+KAAH,sDAQd,OACE,yBAAKC,UAAU,SACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,cACb,yBAAKC,IAAL,IAAmBC,IAAI,UAEzB,yBAAKF,UAAU,cAJjB,MAOE,0BACEG,KADF,eAEEH,UAFF,aAGEH,SAAUA,GAEV,kBAAC,OAAD,MACEM,KADF,WAEEC,MAAO,CACL,CACEC,UADF,EAEEN,QAAS,aAIb,2BACEO,KADF,QAEEC,OAAQ,kCAAcP,UAAU,wBAChCQ,aAHF,MAIEC,YAAY,SAGhB,kBAAC,OAAD,MACEN,KADF,WAEEC,MAAO,CACL,CACEC,UADF,EAEEN,QAAS,YAIb,kBAAC,QAAD,UACEO,KADF,QAEEC,OAAQ,kCAAcP,UAAU,wBAChCQ,aAHF,MAIEE,KAJF,WAKED,YAAY,QAGhB,kBAAC,OAAD,UACE,4BACEH,KADF,QAEEI,KAFF,UAGEC,SAHF,SAIEX,UAAU,qBA3ChB,OAgDE,kBAAC,OAAD,UACE,uBAAGA,UAAH,sBAAmCY,KAAK,IAD1C,MAIE,uBAAGZ,UAAH,oBAAiCY,KAAK,IA7DhD","file":"login.js","sourcesContent":["// 高阶组件 用于提取重复逻辑\n\nimport React from 'react';\n\nlet _this = null;\nlet _isPop = false;\nlet _isMount = false;\nconst popStateCallback = () => {\n  if (_this && _this.getInitialProps) {\n    _isPop = true;\n    if (_isMount) {\n      _this.getInitialProps();\n    }\n  }\n};\n\nexport default SourceComponent => class HoComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialData: {},\n      canClientFetch: false,\n    };\n  }\n\n  // 用于服务端调用\n  static async getInitialProps(ctx) {\n    const res = SourceComponent.getInitialProps ? await SourceComponent.getInitialProps(ctx) : {};\n    return res;\n  }\n\n  // 用于封装处理\n  async getInitialProps() {\n    // ssr首次进入页面以及csr/ssr切换路由时才调用组件的getInitialProps方法\n    const {match, location} = this.props;\n    const res = SourceComponent.getInitialProps ? await SourceComponent.getInitialProps({match, location}) : {};\n    this.setState({\n      initialData: res,\n      canClientFetch: true,\n    });\n\n    // console.log('getInitialProps');\n    // let { tdk } = res.page;\n    // if (tdk) {\n    //     document.title = tdk.title;\n    // }\n  }\n\n  async componentDidMount() {\n    // 注册事件，用于在页面回退和前进的时候触发\n    _isMount = true;// 组件挂载完成\n    if (window.__USE_SERVER__) {\n      _this = this;\n      // 注册事件\n      window.addEventListener('popstate', popStateCallback);\n      if (_isPop) { // 如果前进或者后退 则需要异步获取数据\n        this.getInitialProps();\n      }\n    }\n\n    const canClientFetch = this.props.history && this.props.history.action === 'PUSH';\n    if (canClientFetch || !window.__USE_SERVER__) {\n      await this.getInitialProps();\n    }\n  }\n\n  componentWillUnmount() {\n    _isPop = false; // 重置为未触发\n    _isMount = false;// 重置为未挂载\n  }\n\n  render() {\n    const props = {\n      initialData: {},\n      ...this.props,\n    };\n\n\n    if (__SERVER__) {\n      // 服务端渲染\n      if (this.props.staticContext) props.initialData = this.props.staticContext.initialData || {};\n    } else {\n      // 客户端渲染\n      const {canClientFetch, initialData} = this.state;\n      if (canClientFetch) { // 需要异步请求数据\n        props.initialData = initialData || {};\n      } else {\n        props.initialData = window.__INITIAL_DATA__;\n        window.__INITIAL_DATA__ = null;\n      }\n    }\n    return <SourceComponent {...props} />;\n  }\n};\n","export default __webpack_public_path__ + \"static/images/logo.be0ce3680ce7ca422d9d5d6680d919b0.png\";","import React from 'react';\nimport axios from 'axios';\nimport getInitialProps from 'src/utils/get-initial-props';\nimport {Form, Input, Button, message} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport logoImg from './images/logo.png';\nimport './style.less';\n\nconst NormalLoginForm = () => {\n  const onFinish = async (value) => {\n    const res = (await axios.post('/api/login', value)).data;\n    if (res.code === 200) {\n      message.success(res.message);\n    } else {\n      message.error(res.message);\n    }\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login-content\">\n        <div className=\"login-logo\">\n          <img src={logoImg} alt=\"logo\"/>\n        </div>\n        <div className=\"login-name\">\n          千羚\n        </div>\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: '请输入用户名!',\n              },\n            ]}\n          >\n            <Input\n              size={'large'}\n              prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n              autoComplete=\"off\"\n              placeholder=\"用户名\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: '请输入密码!',\n              },\n            ]}\n          >\n            <Input.Password\n              size={'large'}\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              autoComplete=\"off\"\n              type=\"password\"\n              placeholder=\"密码\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              size={'large'}\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              登录\n            </Button>\n          </Form.Item>\n          <Form.Item>\n            <a className=\"login-form-register\" href=\"\">\n              注册\n            </a>\n            <a className=\"login-form-forgot\" href=\"\">\n              忘记密码?\n            </a>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default getInitialProps(NormalLoginForm);\n"],"sourceRoot":""}